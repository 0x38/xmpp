<?php

namespace Fabiang\Xmpp\EventListener;

use Fabiang\Xmpp\Event\EventManager;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-01-11 at 18:20:16.
 */
class StreamTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var Stream
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * @return void
     */
    protected function setUp()
    {
        $this->object = new Stream;
    }

    /**
     * Test what event are attached.
     *
     * @covers Fabiang\Xmpp\EventListener\Stream::attachEvents
     * @return void
     */
    public function testAttachEvents()
    {
        $output = new EventManager;
        $input  = new EventManager;
        $this->object->setInputEventListener($input)->setOutputEventListener($output);
        $this->object->attachEvents();

        $this->assertArrayHasKey('{http://etherx.jabber.org/streams}stream', $output->getEventList());
        $this->assertArrayHasKey('{http://etherx.jabber.org/streams}features', $input->getEventList());
    }

    /**
     * Test starting client stream.
     *
     * @covers Fabiang\Xmpp\EventListener\Stream::startStreamClient
     * @covers Fabiang\Xmpp\EventListener\Stream::startStreamServer
     * @covers Fabiang\Xmpp\EventListener\Stream::isBlocking
     * @return void
     */
    public function testEvents()
    {
        $this->assertFalse($this->object->isBlocking());
        $this->object->startStreamClient();
        $this->assertTrue($this->object->isBlocking());
        $this->object->startStreamServer();
        $this->assertFalse($this->object->isBlocking());
    }

}
